---
description:
globs:
alwaysApply: false
---
# Common Development Tasks

This guide outlines common development tasks and operations in ConfigForge for quick reference.

## Building

- Build macOS app: `make build` or use Xcode
- Build CLI: `make cli`
- Build universal binary: `make release-universal`
- Clean build artifacts: `make clean`

## Testing

- Run all tests: `make test`
- Run UI tests only: `make test-ui`
- Run unit tests only: `make test-unit`
- Run CLI tests: `make test-cli`

## Package Management

- Update dependencies: `swift package update`
- Resolve dependencies: `swift package resolve`
- See package dependencies in [Package.resolved](mdc:Package.resolved)

## Adding New Features

### Adding a New SSH Property

1. Update [SSHConfigEntry.swift](mdc:ConfigForge/Models/SSHConfigEntry.swift) if needed
2. Update [SSHConfigParser.swift](mdc:ConfigForge/Services/SSHConfigParser.swift) for parsing
3. Add UI elements in [ModernEntryEditorView.swift](mdc:ConfigForge/Views/Editors/ModernEntryEditorView.swift)

### Adding a New Kubernetes Feature

1. Update relevant model in [KubernetesModel.swift](mdc:ConfigForge/Models/KubernetesModel.swift)
2. Update parser in [KubernetesConfigParser.swift](mdc:ConfigForge/Services/KubernetesConfigParser.swift)
3. Add UI elements to the appropriate editor view

### Adding a New CLI Command

1. Create new command in [CLI/Sources/ConfigForgeCLI/Commands/](mdc:CLI/Sources/ConfigForgeCLI/Commands)
2. Register command in [CLI/Sources/ConfigForgeCLI/ConfigForgeCLI.swift](mdc:CLI/Sources/ConfigForgeCLI/ConfigForgeCLI.swift)
3. Add tests in [CLI/Tests/](mdc:CLI/Tests)

## Release Process

1. Update version in [Info.plist](mdc:ConfigForge/Info.plist)
2. Update changelog in [CHANGELOG.md](mdc:CHANGELOG.md)
3. Run `make release-universal` to build the release
4. Create GitHub release and attach built artifacts
